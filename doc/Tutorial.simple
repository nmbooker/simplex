@title
	Simplex -- Simple \LaTeX

@authors
    Julian Fleischer

@margins 3cm 4.5cm 3cm 4.5cm

tableofcontents
newpage
=   Basic Syntax

    The key idea of simplex is that control commands
    and actual text should go separated. Thus: Everything
    in simplex is indented, except for control commands.

    Let's see how that looks:

.#  command
        text
        more text

.   The basic distinction between groups of text is the
    notion of a paragraph.

.#      this belongs to the first
        paragraph.

        this is yet another paragraph.
        this belongs to the second paragraph as well.

.   A paragraph can be marked as certain type of paragraph.
    Here for example is a heading:

.#  =   Heading of Section 1

        Paragraph 1

->  Note that the empty line between the heading and the
    paragraphs is necessary, since otherwise the paragraph
    would belong to the heading.

.   In some circumstances it may come in handy that adjacent
    paragraphs are treated as one. Commands declaring such
    paragraphs start with a dot:

.#  .verbatim
        This is code.

        As well as this is.

.   It is however terminated by a command as well as any
    other paragraph.

    The contents of such paragraphs can also be included from
    a file, simply by substituting the dot with a hashbang (#).

.#  #code Main.java

.   Commands that start with an at (@) are global declarations.
    An exhaustive list of commands, global declarations, and
    special paragraphs can be found in the appendix to this
    document.

    Here is a sample simplex document:

.#  @title
        Sample Simplex Document

    @authors
        John Doe
        Michael Monk

    =   Hello World!

        A sample document might look like this:

    #code sample.simple

==  Document Structure

.   Headings can be designated using \#=#, \#==#, and \#===#.

    Furthermore \#:=# and \#:-# can be used to designate
    paragraphs and subparagraphs. The text upto the first colon
    (:) in a paragraph is used as bold title text for that paragraph:

:=  Sample paragraph: This is a sample paragraph.

.#  :=  Sample paragraph: This is a sample paragraph.

:-  Sample sub paragraph: This is a sample sub paragraph.

.#  :-  Sample sub paragraph: This is a sample sub paragraph.
    
:=  Table of contents: A table of contents can be inserted using the
    \#tableofcontents# command. Note that by default simplex does
    not number sections (i.e. \#=# is translated to \#\section*{...}#).
    If a \#tableofcontents# is present in the document, simplex
    will number sections (i.e. \#=# is translated to \#\section{...}#
    -- note the missing asterisk).

    Here is a sample document:

.#  tableofcontents
    newpage

    =   Section One
    ==  Subsection One-One

        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
        Sed posuere consectetur est at lobortis. Aenean lacinia
        bibendum nulla sed consectetur.

    ->  A little advise in between.

        Vestibulum id ligula porta felis euismod semper.
        Cum sociis natoque penatibus et magnis dis parturient montes,
        nascetur ridiculus mus.

    ==  Subsection One-Two

    newpage
    =   Section Two

        Nulla vitae elit libero, a pharetra augue.

        Etiam porta sem malesuada magna mollis euismod.
        Donec id elit non mi porta gravida at eget metus.
        Maecenas faucibus mollis interdum.

    :=  Nota bene: This is a paragraph.

newpage
=== Lists

    Lists can be created using \#*# and \#+#.
    Lists can be nested:

:=  Unordered lists: 
hfill

columns 2

*   One
**  One-One
*   Two
**  Two-One
**  Two-Three

colbreak

.#  *   One
    **  One-One
    *   Two
    **  Two-One
    **  Two-Three

endcolumns

:=  Numbered lists: 
hfill

columns 2

+   One
++  One-One
+   Two
++  Two-One
++  Two-Three

colbreak

.#  +   One
    ++  One-One
    +   Two
    ++  Two-One
    ++  Two-Three

endcolumns

:=  Description lists: 
hfill

.#  :   coffee: the lifeblood of nerds, and the drink that keeps
        America's workforce complacent on their journey to work.
    :   demo: Demonstrate the capabilities of (software or equipment).
    :   psychopsilocybin: A Mushroom...one of the crazy kind. ^.~ 
        ALSO an awesome Incubus Song from the Fungus Amoungus CD!

:   coffee: the lifeblood of nerds, and the drink that keeps
    America's workforce complacent on their journey to work.
:   demo: Demonstrate the capabilities of (software or equipment).
:   psychopsilocybin: A Mushroom...one of the crazy kind. ^.~ 
    ALSO an awesome Incubus Song from the Fungus Amoungus CD!

->  Using double-colons instead of single colons such a list may
    be rendered like so:

::  coffee: the lifeblood of nerds, and the drink that keeps
    America's workforce complacent on their journey to work.
::  demo: Demonstrate the capabilities of (software or equipment).
::  psychopsilocybin: A Mushroom...one of the crazy kind. ^.~ 
    ALSO an awesome Incubus Song from the Fungus Amoungus CD!


newpage
==  Inline syntax features

    The look and feel of the syntax is heavily influenced by
    Markdown. The following inline markup can be used:

>#  This is **bold** text
>   This is **bold** text
>+
>#  This is *italic text*
>   This is *italic text*
>+
>#  This _text_ is _underlined_
>   This _text_ is _underlined_
>+
>#  This is $M_{ath}^2$
>   This is $M_{ath}^2$
>+
>#  This is \@inline verbatim@
>   This is \@inline verbatim@


->  Note that you can also use # and ! to delimit inline verbatim
    like so: \#\!inline verbatim!# and \!\#inline verbatim#!.

==  Embedding \LaTeX

    If you feel the need to embed real \LaTeX  code into your
    document, you can easily do so via \#.latex#. You can also
    include \LaTeX  from another file using \@#latex <file>@.

    Since simplex takes care of the head and meta data of
    your document it is not possible to include latex commands
    outside \#\begin{document}# and \#\end{document}# using
    this technique. Instead the global declaration
    \#@preamble# can be used (for example for including
    additional packages and the like).

    Sample document:

.#  @title The Title

    @preamble
        \usepackage{setspace}
        \doublespacing

    =   Sample document

    .latex
        Here there goes pure latex code.
        \thispagestyle{plain}
    .

->  Note that the commands demoed here are available in simplex
    too: \#@doublespacing# and \#thispagestyle plain#.

==  Comments

    You can comment out a paragraph by marking it \#%#.
    Larger passages of comments can be declared using \#.comment#.

.#  %   A comment
    =   Not a comment (a heading)

    .comment
        Comment

        Also comment

    ==  Subsection (terminates .comment)

newpage
=   Tables

columns 4

>   1
>   2
>   3
>+
>   4
>   5
>   6
>+
>   7
>   8
>   9
colbreak

>@  l|c||r
>   1
>   2
>   3
>+
>   4
>   5
>   6
>+
>   7
>   8
>   9
colbreak

>@  l|c||r
>-
>   1
>   2
>   3
>+
>   4
>   5
>   6
>+
>   7
>   8
>   9
>-
colbreak

>@  |l|c||r|
>-
>   1
>   2
>   3
>-
>   4
>   5
>   6
>=
>   7
>   8
>   9
>-
endcolumns

    The Code to create these four tables can be seen below:

columns 4
columnseprule 0.4pt

.!  >   1
    >   2
    >   3
    >+
    >   4
    >   5
    >   6
    >+
    >   7
    >   8
    >   9
colbreak

.!  >@  l|c||r
    >   1
    >   2
    >   3
    >+
    >   4
    >   5
    >   6
    >+
    >   7
    >   8
    >   9
colbreak

.!  >@  l|c||r
    >-
    >   1
    >   2
    >   3
    >+
    >   4
    >   5
    >   6
    >+
    >   7
    >   8
    >   9
    >-
colbreak

.!  >@  |l|c||r|
    >-
    >   1
    >   2
    >   3
    >-
    >   4
    >   5
    >   6
    >=
    >   7
    >   8
    >   9
    >-
endcolumns

==  Text in tables

columns 2

>@  |r|p{4cm}|
>-
>!  Head
>!  Yet another head cell
>-
>   1337  
>   Nullam quis risus eget urna mollis ornare vel eu leo.
    Integer posuere erat a ante venenatis dapibus posuere
    velit aliquet.
>-

colbreak

.!  >@  |r|p{5cm}|
    >-
    >!  Head
    >! Yet another head cell
    >-
    >   1337
    >   ...
    >-

endcolumns

==  Rows spanning multiple columns

    This is a table with a single cell spanning two columns:

columns 2

>@  |l|l|
>-
>|2|
    Team sheet
>-
>   GK
>   Paul Robinson
>+
>   LB
>   Lucus Radebe
>+
>   DC
>   Michael Duberry
>+
>   DC
>   Dominic Matteo
>+
>   RB
>   Dider Domi
>+
>   MC
>   David Batty
>+
>   MC
>   Eirik Bakke
>+
>   MC
>   Jody Morris
>+
>   FW
>   Jamie McMaster
>+
>   ST
>   Alan Smith
>+
>   ST
>   Mark Viduka
>-

colbreak

.!  >@  |l|l|
    >-
    >|2|
        Team sheet
    >-
    >   GK
    >   Paul Robinson
    >+
    ...

endcolumns

== Columns spanning multiple rows

    The following table shows how to span multiple rows
    and columns.

columns 2

>@  |l|l|l|
>-
>|3|
    Team sheet
>-
>   Goalkeeper
>   GK
>   Paul Robinson
>-
>,4 Defenders
>   LB
>   Lucus Radabe
>+
>
>   DC
>   Michael Duberry
>+
>
>   DC
>   Dominic Matteo
>+
>
>   RB
>   Didier Domi
>-
>,3 Midfielders
>   MC
>   David Batty
>+
>
>   MC
>   Eirik Bakke
>+
>
>   MC
>   Jody Morris
>-
>   Forward
>   FW
>   Jamie McMaster
>-
>,2 Strikers
>   ST
>   Alan Smith
>+
>
>   ST
>   Mark Viduka
>-

colbreak 2

.!  >@  |l|l|l|
    >-
    >|3|
        Team sheet
    >-
    >   Goalkeeper
    >   GK
    >   Paul Robinson
    >-
    >,4 Defenders
    >   LB
    >   Lucus Radabe
    ...

endcolumns

==  Colored Cells

columns 2

    These are four coloured cells (code is on the right):

>@  cc
>red
    A
>blue
    B
>+
>green
    C
>yellow
    D

colbreak

.!  >@  cc
    >red
        A
    >blue
        B
    >+
    >green
        C
    >yellow
        D

endcolumns

==  Typesetting Equations using Tables


>@  clcl | l

>$  <=>
>$  x^2 + bx + c
>$  =
>$  0
>   isolate $x$: $-c$

>+

>$  <=>
>$  x^2 + bx
>$  =
>$  -c
>  $+\left(\frac b 2\right)^2$ *(completing the square)*

>+

>$  <=>
>$  x^2 + bx + \left(\frac b 2\right)^2
>$  =
>$  -c +\left(\frac b 2\right)^2
>   binomial formula reverse

>+

>$  <=>
>$  \left( x + \frac b 2 \right)^2
>$  =
>$  \left(\frac b 2\right)^2 - c
>$  \sqrt{\text{\nbsp}}

>+

>$  <=>
>$  x + \frac b 2
>$  =
>$  \pm \sqrt{\left(\frac b 2\right)^2 - c}
>$  -\frac b 2

>+

>$  <=>
>$  x
>$  =
>$  -\frac b 2 \pm \sqrt{\left(\frac b 2\right)^2 - c}

.#  >@  clcl | l

    >$  <=>
    >$  x^2 + bx + c
    >$  =
    >$  0
    >   isolate $x$: $-c$

    >+

    >$  <=>
    >$  x^2 + bx
    >$  =
    >$  -c
    >  $+\left(\frac b 2\right)^2$ *(completing the square)*

    ...

newpage
=   Graphics / Images

    Images can be included using the \#image# command:

.#  image image.png

.   The size and rotation of images can be controlled using
    these commands:

::  image-width: Sets the width for all following images
    to the given width. Example: \#image-width 8cm#.
    Note that the values given here are passed to pdflatex
    literally, thus it is possible to use values like
    \#\textwidth# here. \break
    Example: \#image-width \textwidth#.

::  image-height: analog to \#image-width#.

::  image-size: Sets both width and heigth for all following
    images. \break
    Example: \#image-size 16cm 9cm#.

::  image-angle: Sets the rotation of an image.

::  image-trim: Trims the following images by the given
    lengths. \break
    The arguments are *left bottom right top*
    (i.e. counter clockwise). \break
    Example: \#image-trim 1cm 0cm 2cm 1cm

::  image-defaults: Clears all image directives.

->  It is worth noting that image directives apply to
    all following images, not only the next image. Thus
    \#image-angle 180# will rotate all following images
    upside down. Use \#image-defaults# to clear
    the given commands.

->  Supported image types are **png**, **jpg**, and **pdf**.

    Example:

.#  %   All following images should be as wide as the body is
    image-width .5\textwidth

    %   Center the following
    center
    image foto1.jpg
    image foto2.jpg
    image foto3.jpg

newpage
==  Builtin *Graphviz* features

    Graphviz graphs can be included directly into a simplex
    document:

.#  .digraph
        rankdir=LR;

        A -> M;
        A -> N;
        M -> B;
        N -> B;

.   is rendered as:
        
.digraph
    rankdir=LR;

    A -> M;
    A -> N;
    M -> B;
    N -> B;

newpage
appendix

=   Blocks

>@  rm{10cm}
>!2 Document Structure
>-
>#  =
>,3 Headings  
>+
>#  ==
>  
>+
>#  ===
>  
>-
>#  !!
>   Chapters   
>-
>#  !!!
>   Parts
>-
>#  :=
>,2 Paragraphs with a defining word at the start of the line.
>+
>#  :-
>  
>-
.

>@  rm{10cm}
>!2 Lists & Items
>-
>#  *
>   Unnumbered items (like *itemize*).
>-
>#  +
>,2 Numbered items (like *enumerate*).
>+
>#  -
>   
>-
>#  :
>,2 Items with a defining word at the start of the line.
>+
>#  ::
>   
>-
>#  ->
>   Advise items.
>-
.

>@  lm{10cm}
>!2 Tables
>-
>#  >
>   A table cell. See "Tables" for more information.
>-
>#  >+
>   Next row, no line
>-  
>#  >-
>   Next row, single line
>-
>#  >=
>   Next row, double line
>-
>#  >^
>   Turns the table into a *figure* with a *caption* above.
>-  
>#  >_
>   Turns the table into a *figure* with a *caption* below.
>-  
>#  >@
>   The table definition (like in LaTeX).
>-
>#  >X
>   The table definition, also turns the table into a
    *tabularx* table.
>-
.

>@  lm{10cm}
>!2 Others
>-
>#  .
>   A paragraph (like no control command at all,
    useful for explicitly creating a paragraph for example
    in order to terminate a table).
>-
>#  =>
>   A paragraph introduced by =>.
>-
>#  <=
>   A paragraph introduced by <=.
>-
>#  <=>
>   A paragraph introduced by <=>.
>-
>#  =!>
>   A paragraph introduced by =!>.
>-
>#  <!=
>   A paragraph introduced by <!=.
>-
>#  <!>
>   A paragraph introduced by <!>.
>-

newpage
=   Special blocks

->  Note: By exchanging the dot (\#.#) with a hashbang (\@#@)
    you can load data from a file and treat it like the corresponding
    special block (i.e. \@#code myfile.java@ will include the
    contents of *myfile.java* and treat it as Java code).

::  .ascii: An alias for \#.verbatim#.
::  .code: Verbatim text, formatted as source code.
::  .code$ : Like \#.code# but allows for mathescapes (\#$...$#).
::  .comment: Does not include its contents into the document.
::  .digraph: Creates a graphviz \#digraph# (a _di_rected graph)
    and renders it using \#dot#.
::  .graph: Creates a graphviz \#graph# and renders it using
    \#neato#.
::  .haskell: Like \#.code#, but loads definitions for *Haskell*.
::  .java: Like \#.code#, but loads definitions for *Java*.
::  .latex: Inserts raw latex code.
::  .math: Inserts raw math tex, like \#.latex#
    with \#\begin{displaymath}#.
::  .php: Like \#.code#, but loads definitions for *PHP*.
::  .python: Like \#.code#, but loads definitions for *Python*.
::  .verbatim: Inserts verbatim text (like \#\begin{verbatim}#).


==  Shortcuts

::  .#: Like \#.code#.
::  .@: Like \#.code$#.
::  .%: Like \#.comment#.
::  .$ : Like \#.math#.
::  .!: Like \#.verbatim#.

->  Note that replacing the dot with a hashbang works here too.
    Thus \@## file.txt@ will in fact include file.txt as
    code, \@#! file.txt@ as verbatim text, and so on. 

==  #include Directive

::  #include: Literally includes the contents of the file.
    Usage: \@#include filename@. This works like the
    include-command for the c preprocessor. Note that no
    other features of cpp are available in simplex.

newpage
=   Declarations

::  @abstract: 
::  @article: 
::  @authors: 
::  @book: 
::  @cfoot: 
::  @chead: 
::  @date: 
::  @doublespacing: 
::  @draft: 
::  @fontsize: 
::  @landscape: 
::  @lfoot: 
::  @lhead: 
::  @margin-bottom: 
::  @margin-left: 
::  @margin-right: 
::  @margin-top: 
::  @margins: 
::  @pagestyle: 
::  @preamble: 
::  @report: 
::  @rfoot: 
::  @rhead: 
::  @scrartcl: 
::  @slides: 
::  @title: 
::  @tocdepth: 

newpage
=   Lengths

::  baselineskip: 
::  baselinestretch: 
::  columnsep: 
::  columnseprule: 
::  columnwidth: 
::  evensidemargin: 
::  headheight: 
::  oddsidemargin: 
::  paperheight: 
::  paperwidth: 
::  parindent: 
::  parskip: 
::  tabcolsep: 
::  textfloatsep: 
::  textheight: 
::  textwidth: 
::  topmargin: 

newpage
=   Commands

::  appendix: 
::  bfseries: Like \#\bfseries# in LaTeX.
::  bold: Alias for \#\bfseries#.
::  break: 
::  center: Centers the text from this point on.
::  colbreak: 
::  columns: 
::  em: Like \#\em# in LaTeX.
::  endcolumns: 
::  footnotesize: Like \#\footnotesize# in LaTeX.
::  hfill: Like \#\hfill# in LaTeX.
::  huge: Like \#\huge# in LaTeX.
::  Huge: Like \#\Huge# in LaTeX.
::  image-angle: 
::  image-defaults: 
::  image-height: 
::  image-page: 
::  image-scale: 
::  image-size: 
::  image-trim: 
::  image-width: 
::  image: Inserts the specified image, for example
    \#image myfile.png#. Like \#\includegraphics# in \LaTeX .
    Dimensions and other additional arguments can be set using
    the \#image-...# commands. Note that the same limitations
    apply as for pdflatex and includegraphics in general
    (i.e. will only include **JPG**, **PNG**, and **PDF** files).
::  italic: Alias for \#\itshape#.
::  itshape: Like \#\itshape# in LaTeX.
::  large: Like \#\large# in LaTeX.
::  LARGE: Like \#\LARGE# in LaTeX.
::  Large: Like \#\Large# in LaTeX.
::  left: Aligns the text from this point onward to the left.
    Note that this command will not justify the text (which
    \latex does by default). Use \#reset# for this.
::  mdseries: Like \#\mdseries# in LaTeX.
::  newpage: Like \#\newpage# in LaTeX.
::  noindent: Like \#\noindent# in LaTeX.
::  normalfont: Like \#\normalfont# in LaTeX.
::  normalsize: Like \#\normalsize# in LaTeX.
::  pagebreak: Alias for \#\newpage#.
::  pagestyle: Like \#\pagestyle# in LaTeX. Sets the pagestyle for
    the next pages from this point on to the supplied argument.
    For example \#pagestyle plain#.
::  reset: Cancels the effects of \#left#, \#center#,
    \#right# and applies \#normalsize# and \#normalfont#.
::  right: Aligns the text from this point onward to the right.
::  rmfamily: Like \#\rmfamily# in LaTeX.
::  scriptsize: Like \#\scriptsize# in LaTeX.
::  scschape: Like \#\scschape# in LaTeX.
::  sffamily: Like \#\sffamily# in LaTeX.
::  slshape: Like \#\slshape# in LaTeX.
::  small: Like \#\small# in LaTeX.
::  tableofcontents: Like \#\tableofcontents# in LaTeX.
    Will additionally turn numbering of sections on
    (which is turned off by default in simplex).
::  thispagestyle: Changes the style of the current page,
    for example \#thispagestyle plain#.
::  tiny: Like \#\tiny# in LaTeX.
::  ttfamily: Like \#\ttfamily# in LaTeX.
::  upshape: Like \#\upshape# in LaTeX.
::  vfill: Like \#\vfill# in LaTeX.

newpage
=   Symbols

.!  \A  \B  \C  \D  \E  \F  \G  \H  \I  \J  \K  \L  \M
    \N  \O  \P  \Q  \R  \S  \T  \U  \V  \W  \X  \Y  \Z
.
    \A  \B  \C  \D  \E  \F  \G  \H  \I  \J  \K  \L  \M
    \N  \O  \P  \Q  \R  \S  \T  \U  \V  \W  \X  \Y  \Z


.!  \Ac  \Bc  \Cc  \Dc  \Ec  \Fc  \Gc  \Hc  \Ic  \Jc  \Kc  \Lc  \Mc
    \Nc  \Oc  \Pc  \Qc  \Rc  \Sc  \Tc  \Uc  \Vc  \Wc  \Xc  \Yc  \Zc
.
    \Ac  \Bc  \Cc  \Dc  \Ec  \Fc  \Gc  \Hc  \Ic  \Jc  \Kc  \Lc  \Mc
    \Nc  \Oc  \Pc  \Qc  \Rc  \Sc  \Tc  \Uc  \Vc  \Wc  \Xc  \Yc  \Zc


.!  \Af  \Bf  \Cf  \Df  \Ef  \Ff  \Gf  \Hf  \If  \Jf  \Kf  \Lf  \Mf
    \Nf  \Of  \Pf  \Qf  \Rf  \Sf  \Tf  \Uf  \Vf  \Wf  \Xf  \Yf  \Zf
.
    \Af  \Bf  \Cf  \Df  \Ef  \Ff  \Gf  \Hf  \If  \Jf  \Kf  \Lf  \Mf
    \Nf  \Of  \Pf  \Qf  \Rf  \Sf  \Tf  \Uf  \Vf  \Wf  \Xf  \Yf  \Zf

==  Magic Symbols

->  Magic Symbols are those whose values change by context.

::  \ lastpage: Inserts the number of the last page.
::  \ thepage: Inserts the number of the current page.
::  \ thesection: Inserts the number of the current section.
::  \ thechapter: Inserts the number of the current chapter.
::  \ today: Inserts the current date.

==  Special Symbols

->  Special Symbols do not need to be introduced by a backslash.
    They are recognized and substituted in math mode as well as in text.

>@  cc|cc|cc|cc|cc|cc

>#  <=
>   <=
>#  =>
>   =>
>#  <=>
>   <=>
>#  !=
>   !=
>#  (-)
>   (-)
>#  [-]
>   [-]
>+
>#  <==
>   <==
>#  ==>
>   ==>
>#  <==>
>   <==>
>#  ===
>   ===
>#  (+)
>   (+)
>#  [+]
>   [+]
>+
>#  <!=
>   <!=
>#  =!>
>   =!>
>#  <!>
>   <!>
>#  ~>
>   ~>
>#  (x)
>   (x)
>#  [x]
>   [x]
>+
>#  <-
>   <-
>#  ->
>   ->
>#  <->
>   <->
>#  <-<
>   <-<
>#  (.)
>   (.)
>#  [.]
>   [.]
>+
>#  <--
>   <--
>#  -->
>   -->
>#  <-->
>   <-->
>#  >->
>   >->
>#  (*)
>   (*)
>#  |->
>   |->
>+
>#  <!-
>   <!-
>#  -!>
>   -!>
>#  _|_
>   _|_
>#  |=
>   |=
>#  (/)
>   (/)
>#  |-->
>   |-->


